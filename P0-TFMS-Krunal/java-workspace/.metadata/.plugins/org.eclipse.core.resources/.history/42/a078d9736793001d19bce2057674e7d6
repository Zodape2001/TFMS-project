package com.revature.model;
import com.revature.constant.*;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public abstract class TrainerDetails {

	public abstract void addDetails();
	public abstract void showTrainerDetails();
	public abstract void deleteTrainerDetails();
	public abstract void editTrainerDetails();
	
}



class ChildTrainerDetails extends TrainerDetails
{
	Constant constant = new Constant();
	Scanner sc = new Scanner(System.in);
	int condition;

	@Override
	public void addDetails() {
		System.out.print(constant.ENTERTRAINERID);
		String id = sc.nextLine();
		System.out.print(constant.ENTERTRAINERNAME);
		String name = sc.nextLine();
		System.out.print(constant.ENTERTRAINERTRACK);
		String track = sc.nextLine();
		System.out.print(constant.ENTERTRAINERQUALIFICATION);
		String qualification = sc.nextLine();
		System.out.print(constant.ENTERTRAINEREXPERIENCE);
		int experience = sc.nextInt();
		System.out.print(constant.ENTERTRAINERPHONUMBER);
		String phone = sc.nextLine();
		System.out.print(constant.ENTERTRAINEREMAIL);
		String email = sc.nextLine();
		
		List<Trainer> TrainerDetailsStor = new ArrayList<Trainer>();
		do {
			System.out.println("Enter Detals: ");
			Trainer trainer = new Trainer(id, name, track, qualification, experience, phone, email);
			
		}while(condition != 0);
	}

	@Override
	public void showTrainerDetails() {
		System.out.println("calling showTrainerDetails");
	}

	@Override
	public void deleteTrainerDetails() {
		System.out.println("calling deleteTrainerDetails");
	}

	@Override
	public void editTrainerDetails() {
		System.out.println("calling editTrainerDetails");
	}
	
}